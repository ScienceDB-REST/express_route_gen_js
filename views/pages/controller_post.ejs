//
// POST REQUESTS
//
// add new <%- name %>
router.post('/<%- namePlLc -%>', <% include ../partials/acl_middleware %> function(req, res) {
    models.<%- name -%>.create({
				<% include ../partials/set_attributes %>
    }).then(function(<%- name %>) {
        res.json(<%- name -%>);
    }).catch(function(err) {
        res.json(err)
    })
});

// bulk create <%- namePl %> from uploaded CSV or Excel file
router.post('/<%- namePlLc -%>/upload_csv', <% include ../partials/acl_middleware %> function(req, res) {
  csvObjs = helper.parseCsv(req.files.csv_file.data.toString())
  asyncJobs = []
  for (var i = 0, len = csvObjs.length; i < len; i++) {
    asyncJobs.push(models.<%- name -%>.create(csvObjs[i]))
  }
  Promise.all(asyncJobs).then(function(createdModels) {
    res.json(createdModels)
  }).catch(function(err) {
    res.json(err)
  })
});

// bulk create <%- namePl %> from uploaded xlsx or Excel file
router.post('/<%- namePlLc -%>/upload_xlsx', <% include ../partials/acl_middleware %> function(req, res) {
  xlsxObjs = helper.parseXlsx(req.files.xlsx_file.data.toString('binary'))
  asyncJobs = []
  for (var i = 0, len = xlsxObjs.length; i < len; i++) {
    asyncJobs.push(models.<%- name -%>.create(xlsxObjs[i]))
  }
  Promise.all(asyncJobs).then(function(createdModels) {
    res.json(createdModels)
  }).catch(function(err) {
    res.json(err)
  })
});
