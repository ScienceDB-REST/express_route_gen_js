//
// GET REQUESTS
//
// get all <%- namePl %>
router.get('/<%- namePlLc %>', <% include ../partials/acl_middleware %> function(req, res) {
  models.
  <%- name %>.findAll(helper.searchPaginate(req,
    <%- JSON.stringify(typeAttributes['string'] || []) %>)).then(function(
    <%- namePl %>) {
    res.json(<%- namePl %>);
  }).catch(function(err) {
    res.status(500).json(err)
  })
});

// get single <%- name %>
router.get('/<%- nameLc %>/:id', <% include ../partials/acl_middleware %> function(req, res) {
  w = {
    where: {
      id: req.params.id
    }
  }
  i = helper.includeAssociations(req)
  models.
  <%- name %>.find(objectAssign(w,i)).then(function(x) {
    res.json(x);
  }).catch(function(err) {
    res.status(500).json(err)
  })
});

// get example CSV for subsequent bulk create
router.get('/<%- namePlLc %>/example_csv', <% include ../partials/acl_middleware %> function(req, res) {
  var params = JSON.parse(req.query.array);
  var fileType = 'csv';

  if('excel' in req.query && req.query.excel){
        fileType = 'excel';
  }

  models.
  <%- name %>.findAll().then(function(<%- namePl %>) {
    var filteredData = helper.filterNotIn(<%- namePl %>, params);
    if(fileType === 'excel'){
      res.csv(filteredData.map(item => item.dataValues), true);
    }
    else{
      res.csv(filteredData.map(item => item.dataValues), true);
    }
  }).catch(function(err) {
    res.status(500).json(err)
  })

})

// get for vue-table
router.get('/<%- namePlLc %>/vue_table', <% include ../partials/acl_middleware %> function(req, res) {
  helper.vueTable(req, models.
    <%- name%>,
    <%- JSON.stringify(typeAttributes['string'] || []) %>).then(
    function(x) {
      res.json(x)
    }).catch(function(err) {
      res.status(500).json(err)
    })
});
